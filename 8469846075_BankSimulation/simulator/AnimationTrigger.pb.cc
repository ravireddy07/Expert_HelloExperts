// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AnimationTrigger.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AnimationTrigger.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace banksimulation {

namespace {

const ::google::protobuf::Descriptor* BankSimulatorState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BankSimulatorState_reflection_ = NULL;
const ::google::protobuf::Descriptor* BankSimulatorState_BankEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BankSimulatorState_BankEvent_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BankSimulatorState_Action_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ServerAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerAck_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_AnimationTrigger_2eproto() {
  protobuf_AddDesc_AnimationTrigger_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "AnimationTrigger.proto");
  GOOGLE_CHECK(file != NULL);
  BankSimulatorState_descriptor_ = file->message_type(0);
  static const int BankSimulatorState_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankSimulatorState, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankSimulatorState, currentaction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankSimulatorState, tellernum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankSimulatorState, tellercount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankSimulatorState, currenttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankSimulatorState, arrivalevent_),
  };
  BankSimulatorState_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BankSimulatorState_descriptor_,
      BankSimulatorState::default_instance_,
      BankSimulatorState_offsets_,
      -1,
      -1,
      -1,
      sizeof(BankSimulatorState),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankSimulatorState, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankSimulatorState, _is_default_instance_));
  BankSimulatorState_BankEvent_descriptor_ = BankSimulatorState_descriptor_->nested_type(0);
  static const int BankSimulatorState_BankEvent_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankSimulatorState_BankEvent, arrivaltime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankSimulatorState_BankEvent, duration_),
  };
  BankSimulatorState_BankEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BankSimulatorState_BankEvent_descriptor_,
      BankSimulatorState_BankEvent::default_instance_,
      BankSimulatorState_BankEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(BankSimulatorState_BankEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankSimulatorState_BankEvent, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankSimulatorState_BankEvent, _is_default_instance_));
  BankSimulatorState_Action_descriptor_ = BankSimulatorState_descriptor_->enum_type(0);
  ServerAck_descriptor_ = file->message_type(1);
  static const int ServerAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAck, ack_),
  };
  ServerAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServerAck_descriptor_,
      ServerAck::default_instance_,
      ServerAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(ServerAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAck, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_AnimationTrigger_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BankSimulatorState_descriptor_, &BankSimulatorState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BankSimulatorState_BankEvent_descriptor_, &BankSimulatorState_BankEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServerAck_descriptor_, &ServerAck::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_AnimationTrigger_2eproto() {
  delete BankSimulatorState::default_instance_;
  delete BankSimulatorState_reflection_;
  delete BankSimulatorState_BankEvent::default_instance_;
  delete BankSimulatorState_BankEvent_reflection_;
  delete ServerAck::default_instance_;
  delete ServerAck_reflection_;
}

void protobuf_AddDesc_AnimationTrigger_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026AnimationTrigger.proto\022\016banksimulation"
    "\"\314\003\n\022BankSimulatorState\022\013\n\003pid\030\001 \001(\005\022@\n\r"
    "currentAction\030\002 \001(\0162).banksimulation.Ban"
    "kSimulatorState.Action\022\021\n\ttellerNum\030\003 \001("
    "\005\022\023\n\013tellerCount\030\004 \001(\005\022\023\n\013currentTime\030\005 "
    "\001(\005\022B\n\014arrivalEvent\030\006 \003(\0132,.banksimulati"
    "on.BankSimulatorState.BankEvent\0322\n\tBankE"
    "vent\022\023\n\013arrivalTime\030\001 \001(\005\022\020\n\010duration\030\002 "
    "\001(\005\"\261\001\n\006Action\022\021\n\rEVENTS_LOADED\020\000\022$\n CUS"
    "TOMER_SENT_DIRECTLY_TO_TELLER\020\001\022 \n\034CUSTO"
    "MER_SENT_TO_TELLER_LINE\020\002\022\021\n\rCUSTOMER_EX"
    "IT\020\003\022%\n!CUSTOMER_SENT_TO_TELLER_FROM_LIN"
    "E\020\004\022\022\n\016SIMULATION_END\020\005\"\030\n\tServerAck\022\013\n\003"
    "ack\030\001 \001(\0102g\n\027BankSimulatorStateProxy\022L\n\t"
    "SendState\022\".banksimulation.BankSimulator"
    "State\032\031.banksimulation.ServerAck\"\000b\006prot"
    "o3", 642);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AnimationTrigger.proto", &protobuf_RegisterTypes);
  BankSimulatorState::default_instance_ = new BankSimulatorState();
  BankSimulatorState_BankEvent::default_instance_ = new BankSimulatorState_BankEvent();
  ServerAck::default_instance_ = new ServerAck();
  BankSimulatorState::default_instance_->InitAsDefaultInstance();
  BankSimulatorState_BankEvent::default_instance_->InitAsDefaultInstance();
  ServerAck::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_AnimationTrigger_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_AnimationTrigger_2eproto {
  StaticDescriptorInitializer_AnimationTrigger_2eproto() {
    protobuf_AddDesc_AnimationTrigger_2eproto();
  }
} static_descriptor_initializer_AnimationTrigger_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* BankSimulatorState_Action_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BankSimulatorState_Action_descriptor_;
}
bool BankSimulatorState_Action_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const BankSimulatorState_Action BankSimulatorState::EVENTS_LOADED;
const BankSimulatorState_Action BankSimulatorState::CUSTOMER_SENT_DIRECTLY_TO_TELLER;
const BankSimulatorState_Action BankSimulatorState::CUSTOMER_SENT_TO_TELLER_LINE;
const BankSimulatorState_Action BankSimulatorState::CUSTOMER_EXIT;
const BankSimulatorState_Action BankSimulatorState::CUSTOMER_SENT_TO_TELLER_FROM_LINE;
const BankSimulatorState_Action BankSimulatorState::SIMULATION_END;
const BankSimulatorState_Action BankSimulatorState::Action_MIN;
const BankSimulatorState_Action BankSimulatorState::Action_MAX;
const int BankSimulatorState::Action_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int BankSimulatorState_BankEvent::kArrivalTimeFieldNumber;
const int BankSimulatorState_BankEvent::kDurationFieldNumber;
#endif  // !_MSC_VER

BankSimulatorState_BankEvent::BankSimulatorState_BankEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:banksimulation.BankSimulatorState.BankEvent)
}

void BankSimulatorState_BankEvent::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BankSimulatorState_BankEvent::BankSimulatorState_BankEvent(const BankSimulatorState_BankEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:banksimulation.BankSimulatorState.BankEvent)
}

void BankSimulatorState_BankEvent::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  arrivaltime_ = 0;
  duration_ = 0;
}

BankSimulatorState_BankEvent::~BankSimulatorState_BankEvent() {
  // @@protoc_insertion_point(destructor:banksimulation.BankSimulatorState.BankEvent)
  SharedDtor();
}

void BankSimulatorState_BankEvent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BankSimulatorState_BankEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BankSimulatorState_BankEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BankSimulatorState_BankEvent_descriptor_;
}

const BankSimulatorState_BankEvent& BankSimulatorState_BankEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AnimationTrigger_2eproto();
  return *default_instance_;
}

BankSimulatorState_BankEvent* BankSimulatorState_BankEvent::default_instance_ = NULL;

BankSimulatorState_BankEvent* BankSimulatorState_BankEvent::New(::google::protobuf::Arena* arena) const {
  BankSimulatorState_BankEvent* n = new BankSimulatorState_BankEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BankSimulatorState_BankEvent::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BankSimulatorState_BankEvent*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(arrivaltime_, duration_);

#undef ZR_HELPER_
#undef ZR_

}

bool BankSimulatorState_BankEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:banksimulation.BankSimulatorState.BankEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 arrivalTime = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arrivaltime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_duration;
        break;
      }

      // optional int32 duration = 2;
      case 2: {
        if (tag == 16) {
         parse_duration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:banksimulation.BankSimulatorState.BankEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:banksimulation.BankSimulatorState.BankEvent)
  return false;
#undef DO_
}

void BankSimulatorState_BankEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:banksimulation.BankSimulatorState.BankEvent)
  // optional int32 arrivalTime = 1;
  if (this->arrivaltime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->arrivaltime(), output);
  }

  // optional int32 duration = 2;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->duration(), output);
  }

  // @@protoc_insertion_point(serialize_end:banksimulation.BankSimulatorState.BankEvent)
}

::google::protobuf::uint8* BankSimulatorState_BankEvent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:banksimulation.BankSimulatorState.BankEvent)
  // optional int32 arrivalTime = 1;
  if (this->arrivaltime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->arrivaltime(), target);
  }

  // optional int32 duration = 2;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->duration(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:banksimulation.BankSimulatorState.BankEvent)
  return target;
}

int BankSimulatorState_BankEvent::ByteSize() const {
  int total_size = 0;

  // optional int32 arrivalTime = 1;
  if (this->arrivaltime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->arrivaltime());
  }

  // optional int32 duration = 2;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duration());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BankSimulatorState_BankEvent::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BankSimulatorState_BankEvent* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BankSimulatorState_BankEvent>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BankSimulatorState_BankEvent::MergeFrom(const BankSimulatorState_BankEvent& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.arrivaltime() != 0) {
    set_arrivaltime(from.arrivaltime());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
}

void BankSimulatorState_BankEvent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BankSimulatorState_BankEvent::CopyFrom(const BankSimulatorState_BankEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BankSimulatorState_BankEvent::IsInitialized() const {

  return true;
}

void BankSimulatorState_BankEvent::Swap(BankSimulatorState_BankEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BankSimulatorState_BankEvent::InternalSwap(BankSimulatorState_BankEvent* other) {
  std::swap(arrivaltime_, other->arrivaltime_);
  std::swap(duration_, other->duration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BankSimulatorState_BankEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BankSimulatorState_BankEvent_descriptor_;
  metadata.reflection = BankSimulatorState_BankEvent_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BankSimulatorState::kPidFieldNumber;
const int BankSimulatorState::kCurrentActionFieldNumber;
const int BankSimulatorState::kTellerNumFieldNumber;
const int BankSimulatorState::kTellerCountFieldNumber;
const int BankSimulatorState::kCurrentTimeFieldNumber;
const int BankSimulatorState::kArrivalEventFieldNumber;
#endif  // !_MSC_VER

BankSimulatorState::BankSimulatorState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:banksimulation.BankSimulatorState)
}

void BankSimulatorState::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BankSimulatorState::BankSimulatorState(const BankSimulatorState& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:banksimulation.BankSimulatorState)
}

void BankSimulatorState::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  pid_ = 0;
  currentaction_ = 0;
  tellernum_ = 0;
  tellercount_ = 0;
  currenttime_ = 0;
}

BankSimulatorState::~BankSimulatorState() {
  // @@protoc_insertion_point(destructor:banksimulation.BankSimulatorState)
  SharedDtor();
}

void BankSimulatorState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BankSimulatorState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BankSimulatorState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BankSimulatorState_descriptor_;
}

const BankSimulatorState& BankSimulatorState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AnimationTrigger_2eproto();
  return *default_instance_;
}

BankSimulatorState* BankSimulatorState::default_instance_ = NULL;

BankSimulatorState* BankSimulatorState::New(::google::protobuf::Arena* arena) const {
  BankSimulatorState* n = new BankSimulatorState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BankSimulatorState::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BankSimulatorState*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(pid_, tellercount_);
  currenttime_ = 0;

#undef ZR_HELPER_
#undef ZR_

  arrivalevent_.Clear();
}

bool BankSimulatorState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:banksimulation.BankSimulatorState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_currentAction;
        break;
      }

      // optional .banksimulation.BankSimulatorState.Action currentAction = 2;
      case 2: {
        if (tag == 16) {
         parse_currentAction:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_currentaction(static_cast< ::banksimulation::BankSimulatorState_Action >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tellerNum;
        break;
      }

      // optional int32 tellerNum = 3;
      case 3: {
        if (tag == 24) {
         parse_tellerNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tellernum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_tellerCount;
        break;
      }

      // optional int32 tellerCount = 4;
      case 4: {
        if (tag == 32) {
         parse_tellerCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tellercount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_currentTime;
        break;
      }

      // optional int32 currentTime = 5;
      case 5: {
        if (tag == 40) {
         parse_currentTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currenttime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_arrivalEvent;
        break;
      }

      // repeated .banksimulation.BankSimulatorState.BankEvent arrivalEvent = 6;
      case 6: {
        if (tag == 50) {
         parse_arrivalEvent:
          DO_(input->IncrementRecursionDepth());
         parse_loop_arrivalEvent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_arrivalevent()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_arrivalEvent;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:banksimulation.BankSimulatorState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:banksimulation.BankSimulatorState)
  return false;
#undef DO_
}

void BankSimulatorState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:banksimulation.BankSimulatorState)
  // optional int32 pid = 1;
  if (this->pid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pid(), output);
  }

  // optional .banksimulation.BankSimulatorState.Action currentAction = 2;
  if (this->currentaction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->currentaction(), output);
  }

  // optional int32 tellerNum = 3;
  if (this->tellernum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->tellernum(), output);
  }

  // optional int32 tellerCount = 4;
  if (this->tellercount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->tellercount(), output);
  }

  // optional int32 currentTime = 5;
  if (this->currenttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->currenttime(), output);
  }

  // repeated .banksimulation.BankSimulatorState.BankEvent arrivalEvent = 6;
  for (unsigned int i = 0, n = this->arrivalevent_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->arrivalevent(i), output);
  }

  // @@protoc_insertion_point(serialize_end:banksimulation.BankSimulatorState)
}

::google::protobuf::uint8* BankSimulatorState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:banksimulation.BankSimulatorState)
  // optional int32 pid = 1;
  if (this->pid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pid(), target);
  }

  // optional .banksimulation.BankSimulatorState.Action currentAction = 2;
  if (this->currentaction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->currentaction(), target);
  }

  // optional int32 tellerNum = 3;
  if (this->tellernum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->tellernum(), target);
  }

  // optional int32 tellerCount = 4;
  if (this->tellercount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->tellercount(), target);
  }

  // optional int32 currentTime = 5;
  if (this->currenttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->currenttime(), target);
  }

  // repeated .banksimulation.BankSimulatorState.BankEvent arrivalEvent = 6;
  for (unsigned int i = 0, n = this->arrivalevent_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->arrivalevent(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:banksimulation.BankSimulatorState)
  return target;
}

int BankSimulatorState::ByteSize() const {
  int total_size = 0;

  // optional int32 pid = 1;
  if (this->pid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pid());
  }

  // optional .banksimulation.BankSimulatorState.Action currentAction = 2;
  if (this->currentaction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->currentaction());
  }

  // optional int32 tellerNum = 3;
  if (this->tellernum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tellernum());
  }

  // optional int32 tellerCount = 4;
  if (this->tellercount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tellercount());
  }

  // optional int32 currentTime = 5;
  if (this->currenttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->currenttime());
  }

  // repeated .banksimulation.BankSimulatorState.BankEvent arrivalEvent = 6;
  total_size += 1 * this->arrivalevent_size();
  for (int i = 0; i < this->arrivalevent_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrivalevent(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BankSimulatorState::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BankSimulatorState* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BankSimulatorState>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BankSimulatorState::MergeFrom(const BankSimulatorState& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  arrivalevent_.MergeFrom(from.arrivalevent_);
  if (from.pid() != 0) {
    set_pid(from.pid());
  }
  if (from.currentaction() != 0) {
    set_currentaction(from.currentaction());
  }
  if (from.tellernum() != 0) {
    set_tellernum(from.tellernum());
  }
  if (from.tellercount() != 0) {
    set_tellercount(from.tellercount());
  }
  if (from.currenttime() != 0) {
    set_currenttime(from.currenttime());
  }
}

void BankSimulatorState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BankSimulatorState::CopyFrom(const BankSimulatorState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BankSimulatorState::IsInitialized() const {

  return true;
}

void BankSimulatorState::Swap(BankSimulatorState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BankSimulatorState::InternalSwap(BankSimulatorState* other) {
  std::swap(pid_, other->pid_);
  std::swap(currentaction_, other->currentaction_);
  std::swap(tellernum_, other->tellernum_);
  std::swap(tellercount_, other->tellercount_);
  std::swap(currenttime_, other->currenttime_);
  arrivalevent_.UnsafeArenaSwap(&other->arrivalevent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BankSimulatorState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BankSimulatorState_descriptor_;
  metadata.reflection = BankSimulatorState_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BankSimulatorState_BankEvent

// optional int32 arrivalTime = 1;
void BankSimulatorState_BankEvent::clear_arrivaltime() {
  arrivaltime_ = 0;
}
 ::google::protobuf::int32 BankSimulatorState_BankEvent::arrivaltime() const {
  // @@protoc_insertion_point(field_get:banksimulation.BankSimulatorState.BankEvent.arrivalTime)
  return arrivaltime_;
}
 void BankSimulatorState_BankEvent::set_arrivaltime(::google::protobuf::int32 value) {
  
  arrivaltime_ = value;
  // @@protoc_insertion_point(field_set:banksimulation.BankSimulatorState.BankEvent.arrivalTime)
}

// optional int32 duration = 2;
void BankSimulatorState_BankEvent::clear_duration() {
  duration_ = 0;
}
 ::google::protobuf::int32 BankSimulatorState_BankEvent::duration() const {
  // @@protoc_insertion_point(field_get:banksimulation.BankSimulatorState.BankEvent.duration)
  return duration_;
}
 void BankSimulatorState_BankEvent::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:banksimulation.BankSimulatorState.BankEvent.duration)
}

// -------------------------------------------------------------------

// BankSimulatorState

// optional int32 pid = 1;
void BankSimulatorState::clear_pid() {
  pid_ = 0;
}
 ::google::protobuf::int32 BankSimulatorState::pid() const {
  // @@protoc_insertion_point(field_get:banksimulation.BankSimulatorState.pid)
  return pid_;
}
 void BankSimulatorState::set_pid(::google::protobuf::int32 value) {
  
  pid_ = value;
  // @@protoc_insertion_point(field_set:banksimulation.BankSimulatorState.pid)
}

// optional .banksimulation.BankSimulatorState.Action currentAction = 2;
void BankSimulatorState::clear_currentaction() {
  currentaction_ = 0;
}
 ::banksimulation::BankSimulatorState_Action BankSimulatorState::currentaction() const {
  // @@protoc_insertion_point(field_get:banksimulation.BankSimulatorState.currentAction)
  return static_cast< ::banksimulation::BankSimulatorState_Action >(currentaction_);
}
 void BankSimulatorState::set_currentaction(::banksimulation::BankSimulatorState_Action value) {
  
  currentaction_ = value;
  // @@protoc_insertion_point(field_set:banksimulation.BankSimulatorState.currentAction)
}

// optional int32 tellerNum = 3;
void BankSimulatorState::clear_tellernum() {
  tellernum_ = 0;
}
 ::google::protobuf::int32 BankSimulatorState::tellernum() const {
  // @@protoc_insertion_point(field_get:banksimulation.BankSimulatorState.tellerNum)
  return tellernum_;
}
 void BankSimulatorState::set_tellernum(::google::protobuf::int32 value) {
  
  tellernum_ = value;
  // @@protoc_insertion_point(field_set:banksimulation.BankSimulatorState.tellerNum)
}

// optional int32 tellerCount = 4;
void BankSimulatorState::clear_tellercount() {
  tellercount_ = 0;
}
 ::google::protobuf::int32 BankSimulatorState::tellercount() const {
  // @@protoc_insertion_point(field_get:banksimulation.BankSimulatorState.tellerCount)
  return tellercount_;
}
 void BankSimulatorState::set_tellercount(::google::protobuf::int32 value) {
  
  tellercount_ = value;
  // @@protoc_insertion_point(field_set:banksimulation.BankSimulatorState.tellerCount)
}

// optional int32 currentTime = 5;
void BankSimulatorState::clear_currenttime() {
  currenttime_ = 0;
}
 ::google::protobuf::int32 BankSimulatorState::currenttime() const {
  // @@protoc_insertion_point(field_get:banksimulation.BankSimulatorState.currentTime)
  return currenttime_;
}
 void BankSimulatorState::set_currenttime(::google::protobuf::int32 value) {
  
  currenttime_ = value;
  // @@protoc_insertion_point(field_set:banksimulation.BankSimulatorState.currentTime)
}

// repeated .banksimulation.BankSimulatorState.BankEvent arrivalEvent = 6;
int BankSimulatorState::arrivalevent_size() const {
  return arrivalevent_.size();
}
void BankSimulatorState::clear_arrivalevent() {
  arrivalevent_.Clear();
}
 const ::banksimulation::BankSimulatorState_BankEvent& BankSimulatorState::arrivalevent(int index) const {
  // @@protoc_insertion_point(field_get:banksimulation.BankSimulatorState.arrivalEvent)
  return arrivalevent_.Get(index);
}
 ::banksimulation::BankSimulatorState_BankEvent* BankSimulatorState::mutable_arrivalevent(int index) {
  // @@protoc_insertion_point(field_mutable:banksimulation.BankSimulatorState.arrivalEvent)
  return arrivalevent_.Mutable(index);
}
 ::banksimulation::BankSimulatorState_BankEvent* BankSimulatorState::add_arrivalevent() {
  // @@protoc_insertion_point(field_add:banksimulation.BankSimulatorState.arrivalEvent)
  return arrivalevent_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::banksimulation::BankSimulatorState_BankEvent >&
BankSimulatorState::arrivalevent() const {
  // @@protoc_insertion_point(field_list:banksimulation.BankSimulatorState.arrivalEvent)
  return arrivalevent_;
}
 ::google::protobuf::RepeatedPtrField< ::banksimulation::BankSimulatorState_BankEvent >*
BankSimulatorState::mutable_arrivalevent() {
  // @@protoc_insertion_point(field_mutable_list:banksimulation.BankSimulatorState.arrivalEvent)
  return &arrivalevent_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ServerAck::kAckFieldNumber;
#endif  // !_MSC_VER

ServerAck::ServerAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:banksimulation.ServerAck)
}

void ServerAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ServerAck::ServerAck(const ServerAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:banksimulation.ServerAck)
}

void ServerAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  ack_ = false;
}

ServerAck::~ServerAck() {
  // @@protoc_insertion_point(destructor:banksimulation.ServerAck)
  SharedDtor();
}

void ServerAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ServerAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerAck_descriptor_;
}

const ServerAck& ServerAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AnimationTrigger_2eproto();
  return *default_instance_;
}

ServerAck* ServerAck::default_instance_ = NULL;

ServerAck* ServerAck::New(::google::protobuf::Arena* arena) const {
  ServerAck* n = new ServerAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerAck::Clear() {
  ack_ = false;
}

bool ServerAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:banksimulation.ServerAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool ack = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ack_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:banksimulation.ServerAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:banksimulation.ServerAck)
  return false;
#undef DO_
}

void ServerAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:banksimulation.ServerAck)
  // optional bool ack = 1;
  if (this->ack() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ack(), output);
  }

  // @@protoc_insertion_point(serialize_end:banksimulation.ServerAck)
}

::google::protobuf::uint8* ServerAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:banksimulation.ServerAck)
  // optional bool ack = 1;
  if (this->ack() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ack(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:banksimulation.ServerAck)
  return target;
}

int ServerAck::ByteSize() const {
  int total_size = 0;

  // optional bool ack = 1;
  if (this->ack() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerAck::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServerAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerAck>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerAck::MergeFrom(const ServerAck& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.ack() != 0) {
    set_ack(from.ack());
  }
}

void ServerAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerAck::CopyFrom(const ServerAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerAck::IsInitialized() const {

  return true;
}

void ServerAck::Swap(ServerAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerAck::InternalSwap(ServerAck* other) {
  std::swap(ack_, other->ack_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerAck_descriptor_;
  metadata.reflection = ServerAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerAck

// optional bool ack = 1;
void ServerAck::clear_ack() {
  ack_ = false;
}
 bool ServerAck::ack() const {
  // @@protoc_insertion_point(field_get:banksimulation.ServerAck.ack)
  return ack_;
}
 void ServerAck::set_ack(bool value) {
  
  ack_ = value;
  // @@protoc_insertion_point(field_set:banksimulation.ServerAck.ack)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace banksimulation

// @@protoc_insertion_point(global_scope)
