// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AnimationTrigger.proto

#ifndef PROTOBUF_AnimationTrigger_2eproto__INCLUDED
#define PROTOBUF_AnimationTrigger_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace banksimulation {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_AnimationTrigger_2eproto();
void protobuf_AssignDesc_AnimationTrigger_2eproto();
void protobuf_ShutdownFile_AnimationTrigger_2eproto();

class BankSimulatorState;
class BankSimulatorState_BankEvent;
class ServerAck;

enum BankSimulatorState_Action {
  BankSimulatorState_Action_EVENTS_LOADED = 0,
  BankSimulatorState_Action_CUSTOMER_SENT_DIRECTLY_TO_TELLER = 1,
  BankSimulatorState_Action_CUSTOMER_SENT_TO_TELLER_LINE = 2,
  BankSimulatorState_Action_CUSTOMER_EXIT = 3,
  BankSimulatorState_Action_CUSTOMER_SENT_TO_TELLER_FROM_LINE = 4,
  BankSimulatorState_Action_SIMULATION_END = 5,
  BankSimulatorState_Action_BankSimulatorState_Action_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BankSimulatorState_Action_BankSimulatorState_Action_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BankSimulatorState_Action_IsValid(int value);
const BankSimulatorState_Action BankSimulatorState_Action_Action_MIN = BankSimulatorState_Action_EVENTS_LOADED;
const BankSimulatorState_Action BankSimulatorState_Action_Action_MAX = BankSimulatorState_Action_SIMULATION_END;
const int BankSimulatorState_Action_Action_ARRAYSIZE = BankSimulatorState_Action_Action_MAX + 1;

const ::google::protobuf::EnumDescriptor* BankSimulatorState_Action_descriptor();
inline const ::std::string& BankSimulatorState_Action_Name(BankSimulatorState_Action value) {
  return ::google::protobuf::internal::NameOfEnum(
    BankSimulatorState_Action_descriptor(), value);
}
inline bool BankSimulatorState_Action_Parse(
    const ::std::string& name, BankSimulatorState_Action* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BankSimulatorState_Action>(
    BankSimulatorState_Action_descriptor(), name, value);
}
// ===================================================================

class BankSimulatorState_BankEvent : public ::google::protobuf::Message {
 public:
  BankSimulatorState_BankEvent();
  virtual ~BankSimulatorState_BankEvent();

  BankSimulatorState_BankEvent(const BankSimulatorState_BankEvent& from);

  inline BankSimulatorState_BankEvent& operator=(const BankSimulatorState_BankEvent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BankSimulatorState_BankEvent& default_instance();

  void Swap(BankSimulatorState_BankEvent* other);

  // implements Message ----------------------------------------------

  inline BankSimulatorState_BankEvent* New() const { return New(NULL); }

  BankSimulatorState_BankEvent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BankSimulatorState_BankEvent& from);
  void MergeFrom(const BankSimulatorState_BankEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BankSimulatorState_BankEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 arrivalTime = 1;
  void clear_arrivaltime();
  static const int kArrivalTimeFieldNumber = 1;
  ::google::protobuf::int32 arrivaltime() const;
  void set_arrivaltime(::google::protobuf::int32 value);

  // optional int32 duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:banksimulation.BankSimulatorState.BankEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 arrivaltime_;
  ::google::protobuf::int32 duration_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_AnimationTrigger_2eproto();
  friend void protobuf_AssignDesc_AnimationTrigger_2eproto();
  friend void protobuf_ShutdownFile_AnimationTrigger_2eproto();

  void InitAsDefaultInstance();
  static BankSimulatorState_BankEvent* default_instance_;
};
// -------------------------------------------------------------------

class BankSimulatorState : public ::google::protobuf::Message {
 public:
  BankSimulatorState();
  virtual ~BankSimulatorState();

  BankSimulatorState(const BankSimulatorState& from);

  inline BankSimulatorState& operator=(const BankSimulatorState& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BankSimulatorState& default_instance();

  void Swap(BankSimulatorState* other);

  // implements Message ----------------------------------------------

  inline BankSimulatorState* New() const { return New(NULL); }

  BankSimulatorState* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BankSimulatorState& from);
  void MergeFrom(const BankSimulatorState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BankSimulatorState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BankSimulatorState_BankEvent BankEvent;

  typedef BankSimulatorState_Action Action;
  static const Action EVENTS_LOADED = BankSimulatorState_Action_EVENTS_LOADED;
  static const Action CUSTOMER_SENT_DIRECTLY_TO_TELLER = BankSimulatorState_Action_CUSTOMER_SENT_DIRECTLY_TO_TELLER;
  static const Action CUSTOMER_SENT_TO_TELLER_LINE = BankSimulatorState_Action_CUSTOMER_SENT_TO_TELLER_LINE;
  static const Action CUSTOMER_EXIT = BankSimulatorState_Action_CUSTOMER_EXIT;
  static const Action CUSTOMER_SENT_TO_TELLER_FROM_LINE = BankSimulatorState_Action_CUSTOMER_SENT_TO_TELLER_FROM_LINE;
  static const Action SIMULATION_END = BankSimulatorState_Action_SIMULATION_END;
  static inline bool Action_IsValid(int value) {
    return BankSimulatorState_Action_IsValid(value);
  }
  static const Action Action_MIN =
    BankSimulatorState_Action_Action_MIN;
  static const Action Action_MAX =
    BankSimulatorState_Action_Action_MAX;
  static const int Action_ARRAYSIZE =
    BankSimulatorState_Action_Action_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Action_descriptor() {
    return BankSimulatorState_Action_descriptor();
  }
  static inline const ::std::string& Action_Name(Action value) {
    return BankSimulatorState_Action_Name(value);
  }
  static inline bool Action_Parse(const ::std::string& name,
      Action* value) {
    return BankSimulatorState_Action_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 pid = 1;
  void clear_pid();
  static const int kPidFieldNumber = 1;
  ::google::protobuf::int32 pid() const;
  void set_pid(::google::protobuf::int32 value);

  // optional .banksimulation.BankSimulatorState.Action currentAction = 2;
  void clear_currentaction();
  static const int kCurrentActionFieldNumber = 2;
  ::banksimulation::BankSimulatorState_Action currentaction() const;
  void set_currentaction(::banksimulation::BankSimulatorState_Action value);

  // optional int32 tellerNum = 3;
  void clear_tellernum();
  static const int kTellerNumFieldNumber = 3;
  ::google::protobuf::int32 tellernum() const;
  void set_tellernum(::google::protobuf::int32 value);

  // optional int32 tellerCount = 4;
  void clear_tellercount();
  static const int kTellerCountFieldNumber = 4;
  ::google::protobuf::int32 tellercount() const;
  void set_tellercount(::google::protobuf::int32 value);

  // optional int32 currentTime = 5;
  void clear_currenttime();
  static const int kCurrentTimeFieldNumber = 5;
  ::google::protobuf::int32 currenttime() const;
  void set_currenttime(::google::protobuf::int32 value);

  // repeated .banksimulation.BankSimulatorState.BankEvent arrivalEvent = 6;
  int arrivalevent_size() const;
  void clear_arrivalevent();
  static const int kArrivalEventFieldNumber = 6;
  const ::banksimulation::BankSimulatorState_BankEvent& arrivalevent(int index) const;
  ::banksimulation::BankSimulatorState_BankEvent* mutable_arrivalevent(int index);
  ::banksimulation::BankSimulatorState_BankEvent* add_arrivalevent();
  const ::google::protobuf::RepeatedPtrField< ::banksimulation::BankSimulatorState_BankEvent >&
      arrivalevent() const;
  ::google::protobuf::RepeatedPtrField< ::banksimulation::BankSimulatorState_BankEvent >*
      mutable_arrivalevent();

  // @@protoc_insertion_point(class_scope:banksimulation.BankSimulatorState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 pid_;
  int currentaction_;
  ::google::protobuf::int32 tellernum_;
  ::google::protobuf::int32 tellercount_;
  ::google::protobuf::RepeatedPtrField< ::banksimulation::BankSimulatorState_BankEvent > arrivalevent_;
  ::google::protobuf::int32 currenttime_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_AnimationTrigger_2eproto();
  friend void protobuf_AssignDesc_AnimationTrigger_2eproto();
  friend void protobuf_ShutdownFile_AnimationTrigger_2eproto();

  void InitAsDefaultInstance();
  static BankSimulatorState* default_instance_;
};
// -------------------------------------------------------------------

class ServerAck : public ::google::protobuf::Message {
 public:
  ServerAck();
  virtual ~ServerAck();

  ServerAck(const ServerAck& from);

  inline ServerAck& operator=(const ServerAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerAck& default_instance();

  void Swap(ServerAck* other);

  // implements Message ----------------------------------------------

  inline ServerAck* New() const { return New(NULL); }

  ServerAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerAck& from);
  void MergeFrom(const ServerAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServerAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool ack = 1;
  void clear_ack();
  static const int kAckFieldNumber = 1;
  bool ack() const;
  void set_ack(bool value);

  // @@protoc_insertion_point(class_scope:banksimulation.ServerAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  bool ack_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_AnimationTrigger_2eproto();
  friend void protobuf_AssignDesc_AnimationTrigger_2eproto();
  friend void protobuf_ShutdownFile_AnimationTrigger_2eproto();

  void InitAsDefaultInstance();
  static ServerAck* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// BankSimulatorState_BankEvent

// optional int32 arrivalTime = 1;
inline void BankSimulatorState_BankEvent::clear_arrivaltime() {
  arrivaltime_ = 0;
}
inline ::google::protobuf::int32 BankSimulatorState_BankEvent::arrivaltime() const {
  // @@protoc_insertion_point(field_get:banksimulation.BankSimulatorState.BankEvent.arrivalTime)
  return arrivaltime_;
}
inline void BankSimulatorState_BankEvent::set_arrivaltime(::google::protobuf::int32 value) {
  
  arrivaltime_ = value;
  // @@protoc_insertion_point(field_set:banksimulation.BankSimulatorState.BankEvent.arrivalTime)
}

// optional int32 duration = 2;
inline void BankSimulatorState_BankEvent::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 BankSimulatorState_BankEvent::duration() const {
  // @@protoc_insertion_point(field_get:banksimulation.BankSimulatorState.BankEvent.duration)
  return duration_;
}
inline void BankSimulatorState_BankEvent::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:banksimulation.BankSimulatorState.BankEvent.duration)
}

// -------------------------------------------------------------------

// BankSimulatorState

// optional int32 pid = 1;
inline void BankSimulatorState::clear_pid() {
  pid_ = 0;
}
inline ::google::protobuf::int32 BankSimulatorState::pid() const {
  // @@protoc_insertion_point(field_get:banksimulation.BankSimulatorState.pid)
  return pid_;
}
inline void BankSimulatorState::set_pid(::google::protobuf::int32 value) {
  
  pid_ = value;
  // @@protoc_insertion_point(field_set:banksimulation.BankSimulatorState.pid)
}

// optional .banksimulation.BankSimulatorState.Action currentAction = 2;
inline void BankSimulatorState::clear_currentaction() {
  currentaction_ = 0;
}
inline ::banksimulation::BankSimulatorState_Action BankSimulatorState::currentaction() const {
  // @@protoc_insertion_point(field_get:banksimulation.BankSimulatorState.currentAction)
  return static_cast< ::banksimulation::BankSimulatorState_Action >(currentaction_);
}
inline void BankSimulatorState::set_currentaction(::banksimulation::BankSimulatorState_Action value) {
  
  currentaction_ = value;
  // @@protoc_insertion_point(field_set:banksimulation.BankSimulatorState.currentAction)
}

// optional int32 tellerNum = 3;
inline void BankSimulatorState::clear_tellernum() {
  tellernum_ = 0;
}
inline ::google::protobuf::int32 BankSimulatorState::tellernum() const {
  // @@protoc_insertion_point(field_get:banksimulation.BankSimulatorState.tellerNum)
  return tellernum_;
}
inline void BankSimulatorState::set_tellernum(::google::protobuf::int32 value) {
  
  tellernum_ = value;
  // @@protoc_insertion_point(field_set:banksimulation.BankSimulatorState.tellerNum)
}

// optional int32 tellerCount = 4;
inline void BankSimulatorState::clear_tellercount() {
  tellercount_ = 0;
}
inline ::google::protobuf::int32 BankSimulatorState::tellercount() const {
  // @@protoc_insertion_point(field_get:banksimulation.BankSimulatorState.tellerCount)
  return tellercount_;
}
inline void BankSimulatorState::set_tellercount(::google::protobuf::int32 value) {
  
  tellercount_ = value;
  // @@protoc_insertion_point(field_set:banksimulation.BankSimulatorState.tellerCount)
}

// optional int32 currentTime = 5;
inline void BankSimulatorState::clear_currenttime() {
  currenttime_ = 0;
}
inline ::google::protobuf::int32 BankSimulatorState::currenttime() const {
  // @@protoc_insertion_point(field_get:banksimulation.BankSimulatorState.currentTime)
  return currenttime_;
}
inline void BankSimulatorState::set_currenttime(::google::protobuf::int32 value) {
  
  currenttime_ = value;
  // @@protoc_insertion_point(field_set:banksimulation.BankSimulatorState.currentTime)
}

// repeated .banksimulation.BankSimulatorState.BankEvent arrivalEvent = 6;
inline int BankSimulatorState::arrivalevent_size() const {
  return arrivalevent_.size();
}
inline void BankSimulatorState::clear_arrivalevent() {
  arrivalevent_.Clear();
}
inline const ::banksimulation::BankSimulatorState_BankEvent& BankSimulatorState::arrivalevent(int index) const {
  // @@protoc_insertion_point(field_get:banksimulation.BankSimulatorState.arrivalEvent)
  return arrivalevent_.Get(index);
}
inline ::banksimulation::BankSimulatorState_BankEvent* BankSimulatorState::mutable_arrivalevent(int index) {
  // @@protoc_insertion_point(field_mutable:banksimulation.BankSimulatorState.arrivalEvent)
  return arrivalevent_.Mutable(index);
}
inline ::banksimulation::BankSimulatorState_BankEvent* BankSimulatorState::add_arrivalevent() {
  // @@protoc_insertion_point(field_add:banksimulation.BankSimulatorState.arrivalEvent)
  return arrivalevent_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::banksimulation::BankSimulatorState_BankEvent >&
BankSimulatorState::arrivalevent() const {
  // @@protoc_insertion_point(field_list:banksimulation.BankSimulatorState.arrivalEvent)
  return arrivalevent_;
}
inline ::google::protobuf::RepeatedPtrField< ::banksimulation::BankSimulatorState_BankEvent >*
BankSimulatorState::mutable_arrivalevent() {
  // @@protoc_insertion_point(field_mutable_list:banksimulation.BankSimulatorState.arrivalEvent)
  return &arrivalevent_;
}

// -------------------------------------------------------------------

// ServerAck

// optional bool ack = 1;
inline void ServerAck::clear_ack() {
  ack_ = false;
}
inline bool ServerAck::ack() const {
  // @@protoc_insertion_point(field_get:banksimulation.ServerAck.ack)
  return ack_;
}
inline void ServerAck::set_ack(bool value) {
  
  ack_ = value;
  // @@protoc_insertion_point(field_set:banksimulation.ServerAck.ack)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace banksimulation

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::banksimulation::BankSimulatorState_Action> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::banksimulation::BankSimulatorState_Action>() {
  return ::banksimulation::BankSimulatorState_Action_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AnimationTrigger_2eproto__INCLUDED
